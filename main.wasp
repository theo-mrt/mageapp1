app CountdownTimer {
  wasp: {
    version: "^0.13.0"
  },
  title: "CountdownTimer",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

entity User {=psl
    id     Int     @id @default(autoincrement())
    timers Timer[]
psl=}

entity Timer {=psl
    id      Int      @id @default(autoincrement())
    name    String
    endTime DateTime
    design  String
    user    User     @relation(fields: [userId], references: [id])
    userId  Int
psl=}

action createTimer {
  fn: import { createTimer } from "@src/actions.js",
  entities: [Timer]
}

action updateTimer {
  fn: import { updateTimer } from "@src/actions.js",
  entities: [Timer]
}

query getTimers {
  fn: import { getTimers } from "@src/queries.js",
  entities: [Timer]
}

query getTimer {
  fn: import { getTimer } from "@src/queries.js",
  entities: [Timer]
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import DashboardPage from "@src/pages/Dashboard.jsx",
  authRequired: true
}

route TimerRoute { path: "/timer/:timerId", to: TimerPage }
page TimerPage {
  component: import TimerPage from "@src/pages/Timer.jsx",
  authRequired: false
}

route CreateTimerRoute { path: "/create", to: CreateTimerPage }
page CreateTimerPage {
  component: import CreateTimerPage from "@src/pages/CreateTimer.jsx",
  authRequired: true
}